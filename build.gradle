plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.13.3'
    id 'org.jetbrains.kotlin.jvm' version '1.8.20'
}

group plugin_group
version plugin_version

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    pluginName.set('AndroidNativeDebug')
    version.set('CL-2023.1')
    // intellijRepo.set('https://www.jetbrains.com/intellij-repository')
    downloadSources.set(false)
    instrumentCode.set(true)
    plugins.set(['com.intellij.cidr.base', 'com.intellij.clion'])
}

patchPluginXml {
    sinceBuild.set('231.8109')
    untilBuild.set('232.*')
    changeNotes.set(provider {getChangeNote(projectDir)})
}

instrumentCode{
    compilerVersion.set('232.5150.115')
}

publishPlugin {
    channels.set([plugin_channels])
    token.set(System.getenv("CLION_PUBLISH_TOKEN"))
}
test {
    useJUnitPlatform()
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

static def getChangeNote(File projectDir){
    def change = ""
    def change_file = new File(projectDir, "CHANGE")
    def input = change_file.newReader()
    BufferedReader br = new BufferedReader(input)
    try {
        while(true) {
            String line = br.readLine()
            if (line == null || "----" == line) break
            change += line + "<br>"
        }
    } finally {
        br.close()
    }
    return change
}